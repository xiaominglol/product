<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gemini.business.customer.mapper.CustomerIntegralMapper">

    <resultMap id="resultMap" type="com.gemini.business.customer.po.CustomerIntegralPo">
                <id column="id" property="id" javaType="Long"/>
                <result column="customer_id" property="customerId" javaType="Long"/>
                <result column="customer_name" property="customerName" javaType="String"/>
    </resultMap>

    <sql id="fields">
                            i.customer_id,
                    i.customer_name
    </sql>

    <sql id="table">
        d_l_risk_dict i
    </sql>

    <sql id="where">
        <where>
                    <if test="customerId != null and customerId != ''">
                        and i.customer_id = #{customerId}
                    </if>
                    <if test="customerName != null and customerName != ''">
                        and i.customer_name = #{customerName}
                    </if>
        </where>
    </sql>

    <sql id="order">
        <if test="(ascs != null ascs != '') or (descs != null descs != '')">
            order by
            <if test="ascs != null and ascs != ''">
                ${ascs} asc
            </if>
            <if test="descs != null and descs != ''">
                ${descs} desc
            </if>
        </if>
    </sql>

    <select id="get" parameterType="java.lang.Long" resultType="java.util.HashMap">
        select
        <include refid="fields"/>
        from
        <include refid="table"/>
        where rd.id = #{id}
    </select>

    <select id="list" resultType="java.util.HashMap">
        select
        <include refid="fields"/>
        from
        <include refid="table"/>
        <include refid="where"/>
        <include refid="order"/>
    </select>

    <insert id="insert">
        insert into t_customer_integral (
                            customer_id,
                    customer_name
        ) values (
                            #{customerId},
                    #{customerName}
        )
    </insert>

    <update id="update" parameterType="java.lang.Long">
        update t_customer_integral
        <set>
                                    customer_id = #{customerId},
                        customer_name = #{customerName}
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        delete from
        <include refid="table"/>
        where i.id = #{id}
    </delete>

</mapper>