<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gemini.business.customer.mapper.CustomerCollectionMapper">

    <resultMap id="resultMap" type="com.gemini.business.customer.po.CustomerCollectionPo">
                <id column="id" property="id" javaType="Long"/>
                <result column="customer_id" property="customerId" javaType="Long"/>
                <result column="customer_name" property="customerName" javaType="String"/>
                <result column="store_id" property="storeId" javaType="Long"/>
                <result column="store_name" property="storeName" javaType="String"/>
                <result column="goods_id" property="goodsId" javaType="Long"/>
                <result column="goods_name" property="goodsName" javaType="String"/>
                <result column="create_time" property="createTime" javaType="java.util.Date"/>
    </resultMap>

    <sql id="fields">
                            c.customer_id,
                    c.customer_name,
                    c.store_id,
                    c.store_name,
                    c.goods_id,
                    c.goods_name,
                    c.create_time
    </sql>

    <sql id="table">
        d_l_risk_dict c
    </sql>

    <sql id="where">
        <where>
                    <if test="customerId != null and customerId != ''">
                        and c.customer_id = #{customerId}
                    </if>
                    <if test="customerName != null and customerName != ''">
                        and c.customer_name = #{customerName}
                    </if>
                    <if test="storeId != null and storeId != ''">
                        and c.store_id = #{storeId}
                    </if>
                    <if test="storeName != null and storeName != ''">
                        and c.store_name = #{storeName}
                    </if>
                    <if test="goodsId != null and goodsId != ''">
                        and c.goods_id = #{goodsId}
                    </if>
                    <if test="goodsName != null and goodsName != ''">
                        and c.goods_name = #{goodsName}
                    </if>
                    <if test="createTime != null and createTime != ''">
                        and c.create_time = #{createTime}
                    </if>
        </where>
    </sql>

    <sql id="order">
        <if test="(ascs != null ascs != '') or (descs != null descs != '')">
            order by
            <if test="ascs != null and ascs != ''">
                ${ascs} asc
            </if>
            <if test="descs != null and descs != ''">
                ${descs} desc
            </if>
        </if>
    </sql>

    <select id="get" parameterType="java.lang.Long" resultType="java.util.HashMap">
        select
        <include refid="fields"/>
        from
        <include refid="table"/>
        where rd.id = #{id}
    </select>

    <select id="list" resultType="java.util.HashMap">
        select
        <include refid="fields"/>
        from
        <include refid="table"/>
        <include refid="where"/>
        <include refid="order"/>
    </select>

    <insert id="insert">
        insert into customer_collection (
                            customer_id,
                    customer_name,
                    store_id,
                    store_name,
                    goods_id,
                    goods_name,
                    create_time
        ) values (
                            #{customerId},
                    #{customerName},
                    #{storeId},
                    #{storeName},
                    #{goodsId},
                    #{goodsName},
                    #{createTime}
        )
    </insert>

    <update id="update" parameterType="java.lang.Long">
        update customer_collection
        <set>
                                    customer_id = #{customerId},
                        customer_name = #{customerName},
                        store_id = #{storeId},
                        store_name = #{storeName},
                        goods_id = #{goodsId},
                        goods_name = #{goodsName},
                        create_time = #{createTime}
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        delete from
        <include refid="table"/>
        where c.id = #{id}
    </delete>

</mapper>