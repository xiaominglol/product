<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gemini.business.business.mapper.BusinessStoreClassificationMapper">

    <resultMap id="resultMap" type="com.gemini.business.business.po.BusinessStoreClassificationPo">
                <id column="id" property="id" javaType="Long"/>
                <result column="pid" property="pid" javaType="Long"/>
                <result column="code" property="code" javaType="String"/>
                <result column="name" property="name" javaType="String"/>
                <result column="business_id" property="businessId" javaType="Long"/>
                <result column="business_name" property="businessName" javaType="String"/>
                <result column="store_id" property="storeId" javaType="Long"/>
                <result column="store_name" property="storeName" javaType="String"/>
                <result column="description" property="description" javaType="String"/>
                <result column="state_id" property="stateId" javaType="Long"/>
                <result column="state_code" property="stateCode" javaType="String"/>
                <result column="state_name" property="stateName" javaType="String"/>
    </resultMap>

    <sql id="fields">
                            c.pid,
                    c.code,
                    c.name,
                    c.business_id,
                    c.business_name,
                    c.store_id,
                    c.store_name,
                    c.description,
                    c.state_id,
                    c.state_code,
                    c.state_name
    </sql>

    <sql id="table">
        d_l_risk_dict c
    </sql>

    <sql id="where">
        <where>
                    <if test="pid != null and pid != ''">
                        and c.pid = #{pid}
                    </if>
                    <if test="code != null and code != ''">
                        and c.code = #{code}
                    </if>
                    <if test="name != null and name != ''">
                        and c.name = #{name}
                    </if>
                    <if test="businessId != null and businessId != ''">
                        and c.business_id = #{businessId}
                    </if>
                    <if test="businessName != null and businessName != ''">
                        and c.business_name = #{businessName}
                    </if>
                    <if test="storeId != null and storeId != ''">
                        and c.store_id = #{storeId}
                    </if>
                    <if test="storeName != null and storeName != ''">
                        and c.store_name = #{storeName}
                    </if>
                    <if test="description != null and description != ''">
                        and c.description = #{description}
                    </if>
                    <if test="stateId != null and stateId != ''">
                        and c.state_id = #{stateId}
                    </if>
                    <if test="stateCode != null and stateCode != ''">
                        and c.state_code = #{stateCode}
                    </if>
                    <if test="stateName != null and stateName != ''">
                        and c.state_name = #{stateName}
                    </if>
        </where>
    </sql>

    <sql id="order">
        <if test="(ascs != null ascs != '') or (descs != null descs != '')">
            order by
            <if test="ascs != null and ascs != ''">
                ${ascs} asc
            </if>
            <if test="descs != null and descs != ''">
                ${descs} desc
            </if>
        </if>
    </sql>

    <select id="get" parameterType="java.lang.Long" resultType="java.util.HashMap">
        select
        <include refid="fields"/>
        from
        <include refid="table"/>
        where rd.id = #{id}
    </select>

    <select id="list" resultType="java.util.HashMap">
        select
        <include refid="fields"/>
        from
        <include refid="table"/>
        <include refid="where"/>
        <include refid="order"/>
    </select>

    <insert id="insert">
        insert into business_store_classification (
                            pid,
                    code,
                    name,
                    business_id,
                    business_name,
                    store_id,
                    store_name,
                    description,
                    state_id,
                    state_code,
                    state_name
        ) values (
                            #{pid},
                    #{code},
                    #{name},
                    #{businessId},
                    #{businessName},
                    #{storeId},
                    #{storeName},
                    #{description},
                    #{stateId},
                    #{stateCode},
                    #{stateName}
        )
    </insert>

    <update id="update" parameterType="java.lang.Long">
        update business_store_classification
        <set>
                                    pid = #{pid},
                        code = #{code},
                        name = #{name},
                        business_id = #{businessId},
                        business_name = #{businessName},
                        store_id = #{storeId},
                        store_name = #{storeName},
                        description = #{description},
                        state_id = #{stateId},
                        state_code = #{stateCode},
                        state_name = #{stateName}
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        delete from
        <include refid="table"/>
        where c.id = #{id}
    </delete>

</mapper>